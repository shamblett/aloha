{"dependencies":[{"kind":"library","name":"dart:core","id":"dart.core","comment":"\n\nBuilt-in types, collections,\nand other core functionality for every Dart program.\n\nThis library is automatically imported.\n\nSome classes in this library,\nsuch as [String] and [num],\nsupport Dart's built-in data types.\nOther classes, such as [List] and [Map], provide data structures\nfor managing collections of objects.\nAnd still other classes represent commonly used types of data\nsuch as URIs, dates and times, and errors.\n\n## Numbers and booleans\n\n[int] and [double] provide support for Dart's built-in numerical data types:\nintegers and double-precision floating point numbers, respectively.\nAn object of type [bool] is either true or false.\nVariables of these types can be constructed from literals:\n\n    int meaningOfLife = 42;\n    double valueOfPi  = 3.141592;\n    bool visible      = true;\n\n## Strings and regular expressions\n\nA [String] is immutable and represents a sequence of characters.\n\n    String shakespeareQuote = \"All the world's a stage, ...\";\n\n[StringBuffer] provides a way to construct strings efficiently.\n\n    StringBuffer moreShakespeare = new StringBuffer();\n    moreShakespeare.write('And all the men and women ');\n    moreShakespeare.write('merely players; ...');\n\nThe String and StringBuffer classes implement string concatenation,\ninterpolation, and other string manipulation features.\n\n    String philosophy = 'Live on ';\n    String get palindrome => philosophy + philosophy.split('').reversed.join();\n\n[RegExp] implements Dart regular expressions,\nwhich provide a grammar for matching patterns within text.\nFor example, here's a regular expression that matches\na string of one or more digits:\n\n    var numbers = new RegExp(r'\\d+');\n\nDart regular expressions have the same syntax and semantics as\nJavaScript regular expressions. See\n<http://ecma-international.org/ecma-262/5.1/#sec-15.10>\nfor the specification of JavaScript regular expressions.\n\n## Collections\n\nThe dart:core library provides basic collections,\nsuch as [List], [Map], and [Set].\n\nA List is an ordered collection of objects, with a length.\nLists are sometimes called arrays.\nUse a List when you need to access objects by index.\n\n    List superheroes = [ 'Batman', 'Superman', 'Harry Potter' ];\n\nA Set is an unordered collection of unique objects.\nYou cannot get an item by index (position).\nAdding a duplicate item has no effect.\n\n    Set villians = new Set();\n    villians.add('Joker');\n    villians.addAll( ['Lex Luther', 'Voldemort'] );\n\nA Map is an unordered collection of key-value pairs.\nMaps are sometimes called associative arrays because\nmaps associate a key to some value for easy retrieval.\nKeys are unique.\nUse a Map when you need to access objects\nby a unique identifier.\n\n    Map sidekicks = { 'Batman': 'Robin',\n                      'Superman': 'Lois Lane',\n                      'Harry Potter': 'Ron and Hermione' };\n\nIn addition to these classes,\ndart:core contains [Iterable],\nan interface that defines functionality\ncommon in collections of objects.\nExamples include the ability\nto run a function on each element in the collection,\nto apply a test to each element, \nto retrieve an object, and to determine length.\n\nIterable is implemented by List and Set,\nand used by Map for its keys and values.\n\nFor other kinds of collections, check out the\n[dart:collection](#dart-collection) library.\n\n## Date and time\n\nUse [DateTime] to represent a point in time\nand [Duration] to represent a span of time.\n\nYou can create DateTime objects with constructors\nor by parsing a correctly formatted string.\n\n    DateTime now = new DateTime.now();\n    DateTime berlinWallFell = new DateTime(1989, 11, 9);\n    DateTime moonLanding = DateTime.parse(\"1969-07-20\");\n\nCreate a Duration object specifying the individual time units.\n\n    Duration timeRemaining = new Duration(hours:56, minutes:14);\n\nIn addition to DateTime and Duration,\ndart:core contains the [Stopwatch] class for measuring elapsed time.\n    \n## Uri\n\nA [Uri] object represents a uniform resource identifier,\nwhich identifies a resource on the web.\n\n    Uri dartlang = Uri.parse('http://dartlang.org/');\n    \n## Errors\n\nThe [Error] class represents the occurrence of an error\nduring runtime.\nSubclasses of this class represent specific kinds of errors.\n\n## Other documentation\n\nFor more information about how to use the built-in types, refer to\n[Built-in Types](http://www.dartlang.org/docs/dart-up-and-running/contents/ch02.html#built-in-types)\nin Chapter 2 of\n[Dart: Up and Running](http://www.dartlang.org/docs/dart-up-and-running/).\n\nAlso, see\n[dart:core - Numbers, Collections, Strings, and More](http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-dartcore---strings-collections-and-more)\nfor more coverage of classes in this package.\n\nThe \n[Dart Language Specification](http://www.dartlang.org/docs/spec/)\nprovides technical details.\n","children":[{"kind":"class","name":"Object","id":"Object","comment":"\nThe base class for all Dart objects.\n\nBecause Object is the root of the Dart class hierarchy,\nevery other Dart class is a subclass of Object.\n\nWhen you define a class, you should override [toString]\nto return a string describing an instance of that class.\nYou might also need to define [hashCode] and [==], as described in the\n[Implementing map keys]\n(http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-implementing-map-keys)\nsection of the [library tour]\n(http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html).\n","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"isOperator":true,"kind":"method","name":"==","id":"==1()","comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nOverride this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:\n\n * Total: It must return a boolean for all arguments. It should never throw\n   or return `null`.\n\n * Reflexive: For all objects `o`, `o == o` must be true.\n\n * Symmetric: For all objects `o1` and `o2`, `o1 == o2` and `o2 == o1` must\n   either both be true, or both be false.\n\n * Transitive: For all objects `o1`, `o2`, and `o3`, if `o1 == o2` and\n   `o2 == o3` are true, then `o1 == o3` must be true.\n\nThe method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","children":[{"kind":"param","name":"other","id":"other"}],"line":"59"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","comment":"\nReturns a string representation of this object.\n","line":"78"},{"kind":"method","name":"noSuchMethod","id":"noSuchMethod1()","comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","children":[{"ref":{"name":"Invocation","refId":"dart.core/Invocation"},"kind":"param","name":"invocation","id":"invocation"}],"line":"90"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"hashCode","id":"hashCode","comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","line":"73"},{"ref":{"name":"Type","refId":"dart.core/Type"},"kind":"property","name":"runtimeType","id":"runtimeType","comment":"\nA representation of the runtime type of the object.\n","line":"95"},{"kind":"constructor","name":"","id":"0()","comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","line":"29"}],"uri":"dart/dart-sdk/lib/core/object.dart","line":"21"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"isThrowable":true,"kind":"class","name":"Exception","id":"Exception","comment":"\nA marker interface implemented by all core library exceptions.\n\nAn [Exception] is intended to convey information to the user about a failure,\nso that the error can be addressed programmatically. It is intended to be\ncaught, and it should contain useful data fields.\n\nCreating instances of [Exception] directly with [:new Exception(\"message\"):]\nis discouraged, and only included as a temporary measure during development,\nuntil the actual exceptions used by a library are done.\n","children":[{"returnType":{"name":"Exception","refId":"dart.core/Exception"},"kind":"constructor","name":"","id":"1()","children":[{"isOptional":true,"kind":"param","name":"message","id":"message"}],"line":"21"}],"uri":"dart/dart-sdk/lib/core/exceptions.dart","line":"20"}],"uri":"dart/dart-sdk/lib/core/core.dart","line":"153"}],"kind":"library","id":"aloha","children":[{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"AlohaEditable","id":"AlohaEditable","children":[{"isSetter":true,"kind":"method","name":"event=","id":"event=1()","comment":"\nThe event that triggered the creation of the editable, e.g \nthe event from editableActivatedEvent. This is optional for this\nclass but if not supplied some API calls will throw an exception.\n","children":[{"ref":{"name":"Proxy","refId":"js/Proxy"},"kind":"param","name":"event","id":"event"}],"line":"24"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"setUnmodified","id":"setUnmodified0()","comment":"\nMarks the editables current state as unmodified. Use this method to inform the editable\nthat it's contents have been saved\n","line":"52"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"disable","id":"disable0()","comment":"\nDisable this editable\nA disabled editable cannot be written on by keyboard\n","line":"67"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"enable","id":"enable0()","comment":"\nEnable this editable\nReenables a disabled editable to be writeable again\n","line":"77"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"initPlaceholder","id":"initPlaceholder0()","comment":"\nInitialise the placeholder\n","line":"92"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addPlaceholder","id":"addPlaceholder0()","comment":"\nAdd placeholder in editable\n","line":"101"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"removePlaceholder","id":"removePlaceholder1()","comment":"\nRemove placeholder from the content. If setCursor is true,\nwill also set the cursor to the start of the selection. However,\nthis will be ASYNCHRONOUS, so if you rely on the fact that\nthe placeholder is removed after calling this method, setCursor\nshould be false ( or not set )\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"kind":"param","name":"setCursor","id":"setCursor"}],"line":"114"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","comment":"\nString representation of the object\n","line":"127"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"activate","id":"activate0()","comment":"\nActivates an editable for editing, disables all other active items\n","line":"132"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"blur","id":"blur0()","comment":"\nBlur the editable\n","line":"142"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"empty","id":"empty1()","comment":"\nCheck if the string is empty as far as Aloha is concerned\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"str","id":"str"}],"line":"151"},{"kind":"method","name":"getContents","id":"getContents1()","comment":"\nGet the contents of this editable as a HTML string or child node DOM\nobjects.\n\nBoolean asObject Whether or not to retreive the contents of\nthis editable as child node objects or as an HTML string.\nDefaults to string                          .\nreturn {string|jQuery.HTMLElement} Contents of the editable as\na DOM object or an HTML string.\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"kind":"param","name":"asObject","id":"asObject"}],"line":"167"},{"kind":"method","name":"setContents","id":"setContents2()","comment":"\nSet the contents of this editable as a HTML string\nThe return object is as an object or html string, default is HTML.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"content","id":"content"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"kind":"param","name":"asObject","id":"asObject","line":"178"}],"line":"177"},{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"setContentSerializer","id":"setContentSerializer2()","comment":"\nSets the content serializer function.\n\nThe default content serializer will just call the jQuery.html()\nfunction on the editable element (which gets the innerHTML property).\n\nThis method is a static class method and will affect the result\nof editable.getContents() for all editables that have been or\nwill be constructed.\n\nDynamic serializerFunction\n  A function that accepts a DOM element and returns the serialized\n  XHTML of the element contents (excluding the start and end tag of\n  the passed element).\njs.Proxy context, the aAloha editable context ,usually Aloha.Editable\n","children":[{"kind":"param","name":"serializerFunction","id":"serializerFunction"},{"ref":{"name":"Proxy","refId":"js/Proxy"},"kind":"param","name":"context","id":"context","line":"213"}],"line":"212"},{"isStatic":true,"kind":"method","name":"getContentSerializer","id":"getContentSerializer1()","comment":"\nGets the content serializer function.\n\njs.Proxy context, the Aloha editable context ,usually Aloha.Editable\n","children":[{"ref":{"name":"Proxy","refId":"js/Proxy"},"kind":"param","name":"context","id":"context"}],"line":"224"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"destroy","id":"destroy0()","comment":"\nDestroy the editable\n","line":"233"},{"kind":"property","name":"proxy","id":"proxy","comment":"\nThe context for the editable\n","line":"16"},{"kind":"property","name":"isActive","id":"isActive","comment":"\nTrue, if this editable is active for editing.\n","line":"40"},{"kind":"property","name":"isModified","id":"isModified","comment":"\nCheck if the editable has been modified during the edit process\nReturn boolean true if the editable has been modified.\n","line":"46"},{"kind":"property","name":"isDisabled","id":"isDisabled","comment":"\nCheck whether the editable has been disabled\n","line":"61"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"check","id":"check","comment":"\nCheck if the object can be edited by Aloha Editor\nreturn true if Aloha Editor can handle it.\n","line":"87"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isEmpty","id":"isEmpty","comment":"\nCheck if the content is empty.\n","line":"122"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"id","id":"id","comment":"\nGet the id of this editable\n","line":"187"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"snapshotContent","id":"snapshotContent","comment":"\nGet a snapshot of the active editable as a HTML string\n","line":"193"},{"ref":{"name":"Proxy","refId":"js/Proxy"},"kind":"variable","name":"_context","id":"_context","isPrivate":true,"line":"12"},{"ref":{"name":"Proxy","refId":"js/Proxy"},"kind":"variable","name":"_event","id":"_event","isPrivate":true,"line":"18"},{"kind":"constructor","name":"","id":"2()","comment":"\nAn Aloha editable class binding.\nNote that the context and event you pass here are NOT automatically\nretained by this class, if you want this to happen you must retain it\nin your client code. The main Aloha class for instance retains all proxies it \nuses to instantiate this class.\n","children":[{"ref":{"name":"Proxy","refId":"js/Proxy"},"initializedField":{"name":"_context","refId":"aloha/AlohaEditable/_context"},"kind":"param","name":"_context","id":"_context","isPrivate":true},{"ref":{"name":"Proxy","refId":"js/Proxy"},"isOptional":true,"initializedField":{"name":"_event","refId":"aloha/AlohaEditable/_event"},"kind":"param","name":"_event","id":"_event","isPrivate":true,"line":"34"}],"line":"33"}],"uri":"projects/aloha/lib/src/AlohaEditable.dart","line":"10"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"AlohaSmartContentChangeParameters","id":"AlohaSmartContentChangeParameters","children":[{"kind":"property","name":"editableObject","id":"editableObject","comment":"\nThe editable object\n","line":"54"},{"kind":"property","name":"keyIdentifier","id":"keyIdentifier","comment":"\nThe key identifier\n","line":"60"},{"kind":"property","name":"keyCode","id":"keyCode","comment":"\nThe key code\n","line":"66"},{"kind":"property","name":"char","id":"char","comment":"\nThe character entered\n","line":"72"},{"kind":"property","name":"triggerType","id":"triggerType","comment":"\nThe trigger type, one of\nkeypress, idle, blur, paste, block-change\n","line":"79"},{"kind":"property","name":"snapshotContent","id":"snapshotContent","comment":"\nSnapshot content\nThe snapshot content of the editable as a HTML String\n","line":"86"},{"ref":{"name":"AlohaEditable","refId":"aloha/AlohaEditable"},"kind":"variable","name":"_editableObject","id":"_editableObject","isPrivate":true,"line":"50"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_keyIdentifier","id":"_keyIdentifier","isPrivate":true,"line":"56"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_keyCode","id":"_keyCode","isPrivate":true,"line":"62"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_char","id":"_char","isPrivate":true,"line":"68"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_triggerType","id":"_triggerType","isPrivate":true,"line":"74"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_snapshotContent","id":"_snapshotContent","isPrivate":true,"line":"81"},{"kind":"constructor","name":"","id":"6()","comment":"\nSmart content change event return parameters\n","children":[{"ref":{"name":"AlohaEditable","refId":"aloha/AlohaEditable"},"initializedField":{"name":"_editableObject","refId":"aloha/AlohaSmartContentChangeParameters/_editableObject"},"kind":"param","name":"_editableObject","id":"_editableObject","isPrivate":true},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"_keyIdentifier","refId":"aloha/AlohaSmartContentChangeParameters/_keyIdentifier"},"kind":"param","name":"_keyIdentifier","id":"_keyIdentifier","isPrivate":true,"line":"44"},{"ref":{"name":"int","refId":"dart.core/int"},"initializedField":{"name":"_keyCode","refId":"aloha/AlohaSmartContentChangeParameters/_keyCode"},"kind":"param","name":"_keyCode","id":"_keyCode","isPrivate":true,"line":"45"},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"_char","refId":"aloha/AlohaSmartContentChangeParameters/_char"},"kind":"param","name":"_char","id":"_char","isPrivate":true,"line":"46"},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"_triggerType","refId":"aloha/AlohaSmartContentChangeParameters/_triggerType"},"kind":"param","name":"_triggerType","id":"_triggerType","isPrivate":true,"line":"47"},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"_snapshotContent","refId":"aloha/AlohaSmartContentChangeParameters/_snapshotContent"},"kind":"param","name":"_snapshotContent","id":"_snapshotContent","isPrivate":true,"line":"48"}],"line":"43"}],"uri":"projects/aloha/lib/src/AlohaClassTypes.dart","line":"37"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"AlohaCommandWillExecuteParameters","id":"AlohaCommandWillExecuteParameters","comment":"\nCommands \n","children":[{"kind":"property","name":"commandId","id":"commandId","comment":"\nThe command Id e.g 'bold'\n","line":"26"},{"kind":"property","name":"preventDefault","id":"preventDefault","comment":"\nThe prevent default state\n","line":"32"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_commandId","id":"_commandId","isPrivate":true,"line":"22"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_preventDefault","id":"_preventDefault","isPrivate":true,"line":"28"},{"kind":"constructor","name":"","id":"2()","comment":"\nCommand will execute event return parameters\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"_commandId","refId":"aloha/AlohaCommandWillExecuteParameters/_commandId"},"kind":"param","name":"_commandId","id":"_commandId","isPrivate":true},{"ref":{"name":"bool","refId":"dart.core/bool"},"initializedField":{"name":"_preventDefault","refId":"aloha/AlohaCommandWillExecuteParameters/_preventDefault"},"kind":"param","name":"_preventDefault","id":"_preventDefault","isPrivate":true,"line":"20"}],"line":"19"}],"uri":"projects/aloha/lib/src/AlohaClassTypes.dart","line":"14"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"Exception","refId":"dart.core/Exception"}],"isThrowable":true,"kind":"class","name":"AlohaException","id":"AlohaException","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"19"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_message","id":"_message","isPrivate":true,"line":"12"},{"kind":"constructor","name":"","id":"1()","comment":"\nAloha'a exception class\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"initializedField":{"name":"_message","refId":"aloha/AlohaException/_message"},"kind":"param","name":"_message","id":"_message","isPrivate":true}],"line":"17"}],"uri":"projects/aloha/lib/src/AlohaException.dart","line":"10"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"Aloha","id":"Aloha","children":[{"isSetter":true,"kind":"method","name":"isReady=","id":"isReady=1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"state","id":"state"}],"line":"46"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"AlohaEditable","refId":"aloha/AlohaEditable"}]},"kind":"method","name":"_getEditablesAsList","id":"_getEditablesAsList0()","isPrivate":true,"line":"448"},{"returnType":{"name":"AlohaEditable","refId":"aloha/AlohaEditable"},"kind":"method","name":"_getActiveEditable","id":"_getActiveEditable0()","isPrivate":true,"line":"475"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"reinitialise","id":"reinitialise0()","comment":"\nInitialization\nUse to set Aloha back to its original state\n","line":"526"},{"returnType":{"name":"List","refId":"dart.core/List"},"kind":"method","name":"getLoadedPlugins","id":"getLoadedPlugins0()","comment":"\nCurrently loaded plugins\n","line":"535"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"isPluginLoaded","id":"isPluginLoaded1()","comment":"\nIs a plugin loaded\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"pluginName","id":"pluginName"}],"line":"545"},{"returnType":{"name":"AlohaEditable","refId":"aloha/AlohaEditable"},"kind":"method","name":"getEditableById","id":"getEditableById1()","comment":"\nGet an editable by its id attribute, returns null if none found\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"id","id":"id"}],"line":"554"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"activateEditable","id":"activateEditable1()","comment":"\nActivate the specified editable, also deactivates all other editables.\n\nNote this does NOT set the isActive flag on the editable itself, it just\ndeactivates all other editables by setting the active flag to false then \nmakes the editable supplied the activeEditable.\n","children":[{"ref":{"name":"AlohaEditable","refId":"aloha/AlohaEditable"},"kind":"param","name":"editable","id":"editable"}],"line":"579"},{"returnType":{"name":"AlohaEditable","refId":"aloha/AlohaEditable"},"kind":"method","name":"getActiveEditable","id":"getActiveEditable0()","comment":"\nGet the active editable, null if none active\n","line":"590"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"deactivateActiveEditable","id":"deactivateActiveEditable0()","comment":"\nDeactivate the active editable\n","line":"611"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"isAnEditable","id":"isAnEditable1()","comment":"\nCheck if an object is an editable.\n\nThis check is performed in the class, its not passed through to the \nAloha API, Aloha uses javascript object comparison which is not robust,\nwe can better do this ourselves.\n","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"anyObject","id":"anyObject"}],"line":"625"},{"returnType":{"name":"AlohaEditable","refId":"aloha/AlohaEditable"},"kind":"method","name":"getEditableHost","id":"getEditableHost1()","comment":"\nGet editable host.\n\nGets the nearest editable parent of the HTML element contained in the\nelement parameter. Returns null if none found.\n","children":[{"ref":{"name":"HtmlElement","refId":"dart.dom.html/HtmlElement"},"kind":"param","name":"element","id":"element"}],"line":"651"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"registerEditable","id":"registerEditable1()","comment":"\nRegister an editable. \n","children":[{"ref":{"name":"AlohaEditable","refId":"aloha/AlohaEditable"},"kind":"param","name":"editable","id":"editable"}],"line":"667"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"unregisterEditable","id":"unregisterEditable1()","comment":"\nUnregister an editable. \n","children":[{"ref":{"name":"AlohaEditable","refId":"aloha/AlohaEditable"},"kind":"param","name":"editable","id":"editable"}],"line":"677"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"getUrl","id":"getUrl0()","comment":"\nGet the Aloha url.\n\nAloha's baseUrl setting or \"\" if not set\n","line":"689"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"getPluginUrl","id":"getPluginUrl1()","comment":"\nGets a plugin's url.\n\nGiven the name returns the plugin url as a string\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"}],"line":"701"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"log","id":"log3()","comment":"\nLogs a message to the console.\n\nTakes the log level, the logging component name and the\nlog message itself.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"level","id":"level"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"component","id":"component"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"message","id":"message"}],"line":"714"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"execCommand","id":"execCommand3()","comment":"\nexecCommand implements the commands from the commmand manager section\nSee the relevant Mozilla documentation here for details.\nhttps://developer.mozilla.org/en/docs/Rich-Text_Editing_in_Mozilla\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"commandId","id":"commandId"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"showUi","id":"showUi","line":"727"},{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"null","isOptional":true,"isNamed":true,"kind":"param","name":"value","id":"value","line":"728"}],"line":"726"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"queryCommandEnabled","id":"queryCommandEnabled1()","comment":"\nQuery command enabled.\n\nIf the command is available and not disabled or the active range \nis not null the command is enabled, True indicates this.\n\nTODO range option needs to be added, uses current range selection. \n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"commandId","id":"commandId"}],"line":"743"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"queryCommandSupported","id":"queryCommandSupported1()","comment":"\nQuery command supported.\n\nReturns true if the command is supported.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"commandId","id":"commandId"}],"line":"756"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"queryCommandValue","id":"queryCommandValue1()","comment":"\nReturn the commands value.\n\n\nTODO range option needs to be added, uses current range selection. \n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"commandId","id":"commandId"}],"line":"769"},{"returnType":{"name":"List","refId":"dart.core/List"},"kind":"method","name":"querySupportedCommands","id":"querySupportedCommands0()","comment":"\nQuery supported commands.\n\nReturns a list of supported commands.\n\n","line":"782"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"attachEditable","id":"attachEditable1()","comment":"\nAttach jQuery selectors to Aloha to make them editable entities.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"selector","id":"selector"}],"line":"811"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"detachEditable","id":"detachEditable1()","comment":"\nDetach jQuery selectors from Aloha to make previous editables non-editable \nentities.\nIf they were previously editable they will be destroyed.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"selector","id":"selector"}],"line":"823"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"disableObjectResizing","id":"disableObjectResizing0()","comment":"\nDisable object resizing if the browser supports this.\n","line":"833"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","comment":"\nTo string override\n","line":"843"},{"kind":"property","name":"jsContext","id":"jsContext","comment":"\nThe js context\n","line":"20"},{"kind":"property","name":"jQueryContext","id":"jQueryContext","comment":"\nJQuery context\n","line":"26"},{"kind":"property","name":"context","id":"context","comment":"\nAloha context\n","line":"32"},{"kind":"property","name":"alohajQueryContext","id":"alohajQueryContext","comment":"\nAloha's extended jQuery context\n","line":"38"},{"kind":"property","name":"isReady","id":"isReady","comment":"\nAloha is ready when this is set. The API calls check for this,\nif Aloha is not ready an AlohaException is raised.\n","line":"45"},{"kind":"property","name":"readyEvent","id":"readyEvent","comment":"\n Ready, NOT a broadcast event, only use one listener for this.\n This event is triggered when the Aloha Editor is fully initialized, the core, plugins and UI. \n","line":"55"},{"kind":"property","name":"commandWillExecuteEvent","id":"commandWillExecuteEvent","comment":"\nThis event is triggered before a command will be executed. \nReturned parameter is AlohaCommandWillExecuteParameters class.\n","line":"68"},{"kind":"property","name":"commandExecutedEvent","id":"commandExecutedEvent","comment":"\nThis event is triggered after a command is executed using the execCommand method\nReturned parameter is a String, the command executed.\n","line":"76"},{"kind":"property","name":"loggerReadyEvent","id":"loggerReadyEvent","comment":"\nThis event is triggered when the Aloha Editor logger is fully initialized.\n","line":"83"},{"kind":"property","name":"loggerFullEvent","id":"loggerFullEvent","comment":"\nThis event is triggered when the Aloha Editor log history is full.\n","line":"90"},{"kind":"property","name":"editableCreatedEvent","id":"editableCreatedEvent","comment":"\nThis event fires after a new editable has been created, eg. via \n$( '#editme' ).aloha() in js or via the attachEditable API method\nReturned parameter is an AlohaEditable class.\n","line":"99"},{"kind":"property","name":"editableDestroyedEvent","id":"editableDestroyedEvent","comment":"\nThis event fires after a new editable has been destroyed, eg. via \n$( '#editme' ).mahalo() in js or via the detachEditable API method.\n","line":"107"},{"kind":"property","name":"editableActivatedEvent","id":"editableActivatedEvent","comment":"\nThis event fires when an editable has been activated \nby clicking on it say.\n\nReturned parameter is a list of the editable activated and the old \neditable that was active, both of AlohaEditable class. If there was\nno old active editable(e.g first click on the page) none is supplied.\n [editable, oldEditable]\n","line":"122"},{"kind":"property","name":"editableDeactivatedEvent","id":"editableDeactivatedEvent","comment":"\nThis event fires when an editable has been deactivated by \nclicking on a non editable part of the page or on an other editable, or\nhas been specifically deactivated. \n\nReturned parameter is an AlohaEditable class\n","line":"133"},{"kind":"property","name":"smartContentChangeEvent","id":"smartContentChangeEvent","comment":"\nA smart content change occurs when a special editing action, or a combination of \ninteractions are performed by the user during the course of editing within an editable.\nThe smart content change event therefore signals that content has been inserted (or changed) \ninto the editable that may need to be processed in a special way. \nIt also lets you know when an Aloha Block has changed (i.e. when any of its attributes have \nchanged). \nThe smart content change event is also triggered after an idle period that follows rapid, \nbasic changes to the contents of an editable such as when the user is typing.\n\nReturned parameter is a AlohaSmartContentChangeParameters class\n","line":"149"},{"kind":"property","name":"blockSelectedEvent","id":"blockSelectedEvent","comment":"\nProcessing of cursor keys will currently detect blocks (elements with contenteditable=false) \nand selects them (normally the cursor would jump right past them). \nThis will also trigger the blockSelectedEvent event.\n\nReturned parameter is an HTML element class such as DivElement, ParagraphElement\netc. dependent on selection.\n","line":"161"},{"kind":"property","name":"imageSelectedEvent","id":"imageSelectedEvent","comment":"\nImage selection event\n","line":"168"},{"kind":"property","name":"imageUnselectedEvent","id":"imageUnselectedEvent","comment":"\nImage unselection event\n","line":"175"},{"kind":"property","name":"linkSelectedEvent","id":"linkSelectedEvent","comment":"\nLink selection event\n","line":"182"},{"kind":"property","name":"linkUnselectedEvent","id":"linkUnselectedEvent","comment":"\nLink unselection event\n","line":"189"},{"kind":"property","name":"tableSelectionChangedEvent","id":"tableSelectionChangedEvent","comment":"\nTable activation event\nAfter an existing dom-table is transformed into an editable Aloha Editor \ntable this event is triggered.\n","line":"198"},{"kind":"property","name":"tableActivatedEvent","id":"tableActivatedEvent","comment":"\nTable selection change event\nTriggers when one or more cells of a table are selected or unselected.\n","line":"206"},{"kind":"property","name":"ddfAllFilesPreparedEvent","id":"ddfAllFilesPreparedEvent","comment":"\nAll files upload prepared.\nAfter all files are prepared for an upload this event is triggered.\n","line":"214"},{"kind":"property","name":"ddfFilesDroppedInPageEvent","id":"ddfFilesDroppedInPageEvent","comment":"\nDrop files in page\nThis event is triggered when files are dropped into the page and not an editable.\n\nReturned parameter is an HTML element class such as DivElement, ParagraphElement\netc. dependent on the drop target.\n","line":"225"},{"kind":"property","name":"ddfFileUploadPreparedEvent","id":"ddfFileUploadPreparedEvent","comment":"\nFile upload prepared\nThis event is triggered when a single file of many dropped files is ready for uploading.\n\nReturned parameter is an HTML element class such as DivElement, ParagraphElement\netc. dependent on the drop target.\n","line":"236"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"version","id":"version","comment":"\nVersion string\n","line":"446"},{"kind":"property","name":"editables","id":"editables","comment":"\nList of currently maintained editables as a List of AlohaEditable's.\n","line":"473"},{"kind":"property","name":"activeEditable","id":"activeEditable","comment":"\nCurrently active editable as an AlohaEditable\n","line":"495"},{"kind":"property","name":"settings","id":"settings","comment":"\nSettings\nWe have no way of knowing what settings have been applied to Aloha in its js startup\nso you need to know the settings structure on the client side. The settings are returned\nas a JSON string.\n","line":"503"},{"kind":"property","name":"defaults","id":"defaults","comment":"\nDefaults\nHardwired startup defaults, returned as a JSON string\n\n","line":"510"},{"kind":"property","name":"OSName","id":"OSName","comment":"\nOS name\n","line":"515"},{"kind":"property","name":"loadedPlugins","id":"loadedPlugins","comment":"\nLoaded plugins, returned a list of plugin name strings\n","line":"520"},{"ref":{"name":"Proxy","refId":"js/Proxy"},"kind":"variable","name":"_context","id":"_context","isPrivate":true,"line":"16"},{"isFinal":true,"kind":"variable","name":"_jQueryContext","id":"_jQueryContext","isPrivate":true,"line":"22"},{"isFinal":true,"kind":"variable","name":"_alohaContext","id":"_alohaContext","isPrivate":true,"line":"28"},{"isFinal":true,"kind":"variable","name":"_alohajQueryContext","id":"_alohajQueryContext","isPrivate":true,"line":"34"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_ready","id":"_ready","isPrivate":true,"line":"40"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsReady","id":"_jsReady","isPrivate":true,"line":"49"},{"isFinal":true,"kind":"variable","name":"_onReady","id":"_onReady","isPrivate":true,"line":"50"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsCommandWillExecute","id":"_jsCommandWillExecute","comment":"\nCommands \n","isPrivate":true,"line":"62"},{"isFinal":true,"kind":"variable","name":"_onCommandWillExecute","id":"_onCommandWillExecute","isPrivate":true,"line":"63"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsCommandExecuted","id":"_jsCommandExecuted","isPrivate":true,"line":"70"},{"isFinal":true,"kind":"variable","name":"_onCommandExecuted","id":"_onCommandExecuted","isPrivate":true,"line":"71"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsLoggerReady","id":"_jsLoggerReady","isPrivate":true,"line":"78"},{"isFinal":true,"kind":"variable","name":"_onLoggerReady","id":"_onLoggerReady","isPrivate":true,"line":"79"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsLoggerFull","id":"_jsLoggerFull","isPrivate":true,"line":"85"},{"isFinal":true,"kind":"variable","name":"_onLoggerFull","id":"_onLoggerFull","isPrivate":true,"line":"86"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsEditableCreated","id":"_jsEditableCreated","isPrivate":true,"line":"92"},{"isFinal":true,"kind":"variable","name":"_onEditableCreated","id":"_onEditableCreated","isPrivate":true,"line":"93"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsEditableDestroyed","id":"_jsEditableDestroyed","isPrivate":true,"line":"101"},{"isFinal":true,"kind":"variable","name":"_onEditableDestroyed","id":"_onEditableDestroyed","isPrivate":true,"line":"102"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsEditableActivated","id":"_jsEditableActivated","isPrivate":true,"line":"110"},{"isFinal":true,"kind":"variable","name":"_onEditableActivated","id":"_onEditableActivated","isPrivate":true,"line":"112"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsEditableDeactivated","id":"_jsEditableDeactivated","isPrivate":true,"line":"124"},{"isFinal":true,"kind":"variable","name":"_onEditableDeactivated","id":"_onEditableDeactivated","isPrivate":true,"line":"125"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsSmartContentChange","id":"_jsSmartContentChange","isPrivate":true,"line":"135"},{"isFinal":true,"kind":"variable","name":"_onSmartContentChange","id":"_onSmartContentChange","isPrivate":true,"line":"136"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsBlockSelected","id":"_jsBlockSelected","isPrivate":true,"line":"151"},{"isFinal":true,"kind":"variable","name":"_onBlockSelectedChange","id":"_onBlockSelectedChange","isPrivate":true,"line":"152"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsImageSelected","id":"_jsImageSelected","isPrivate":true,"line":"163"},{"isFinal":true,"kind":"variable","name":"_onImageSelected","id":"_onImageSelected","isPrivate":true,"line":"164"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsImageUnselected","id":"_jsImageUnselected","isPrivate":true,"line":"170"},{"isFinal":true,"kind":"variable","name":"_onImageUnselected","id":"_onImageUnselected","isPrivate":true,"line":"171"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsLinkSelected","id":"_jsLinkSelected","isPrivate":true,"line":"177"},{"isFinal":true,"kind":"variable","name":"_onLinkSelected","id":"_onLinkSelected","isPrivate":true,"line":"178"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsLinkUnselected","id":"_jsLinkUnselected","isPrivate":true,"line":"184"},{"isFinal":true,"kind":"variable","name":"_onLinkUnselected","id":"_onLinkUnselected","isPrivate":true,"line":"185"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsTableSelectionChanged","id":"_jsTableSelectionChanged","isPrivate":true,"line":"191"},{"isFinal":true,"kind":"variable","name":"_onTableSelectionChanged","id":"_onTableSelectionChanged","isPrivate":true,"line":"192"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsTableActivated","id":"_jsTableActivated","isPrivate":true,"line":"200"},{"isFinal":true,"kind":"variable","name":"_onTableActivated","id":"_onTableActivated","isPrivate":true,"line":"201"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsDdfAllFilesPrepared","id":"_jsDdfAllFilesPrepared","isPrivate":true,"line":"208"},{"isFinal":true,"kind":"variable","name":"_onDdfAllFilesPrepared","id":"_onDdfAllFilesPrepared","isPrivate":true,"line":"209"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsDdfFilesDroppedInPage","id":"_jsDdfFilesDroppedInPage","isPrivate":true,"line":"216"},{"isFinal":true,"kind":"variable","name":"_onDdfFilesDroppedInPage","id":"_onDdfFilesDroppedInPage","isPrivate":true,"line":"217"},{"ref":{"name":"Callback","refId":"js/Callback"},"kind":"variable","name":"_jsDdfFileUploadPrepared","id":"_jsDdfFileUploadPrepared","isPrivate":true,"line":"227"},{"isFinal":true,"kind":"variable","name":"_onDdfFileUploadPrepared","id":"_onDdfFileUploadPrepared","isPrivate":true,"line":"228"},{"kind":"constructor","name":"","id":"0()","comment":"\nA binding class for the Aloha HTML5 editor. Refer to the accompanying documentation\nfor setup and usage information. Omissions from the Aloha API are also documented.\n","line":"242"}],"uri":"projects/aloha/lib/src/Aloha.dart","line":"13"}],"uri":"projects/aloha/lib/aloha.dart","line":"8"}